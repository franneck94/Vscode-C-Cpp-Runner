{
  "name": "c-cpp-runner",
  "displayName": "C/C++ Runner",
  "description": "ðŸš€ Compile, run and debug single or multiple C/C++ files with ease. ðŸš€",
  "version": "4.1.2",
  "publisher": "franneck94",
  "license": "MIT",
  "icon": "icon.png",
  "galleryBanner": {
    "color": "#9c9c9c",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.71.0"
  },
  "categories": [
    "Programming Languages",
    "Debuggers",
    "Snippets"
  ],
  "tags": [
    "c",
    "c++",
    "run",
    "compile",
    "build",
    "debug"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/franneck94/vscode-c-cpp-runner.git"
  },
  "homepage": "https://github.com/franneck94/vscode-c-cpp-runner/README.md",
  "bugs": {
    "url": "https://github.com/franneck94/vscode-c-cpp-runner/issues"
  },
  "activationEvents": [
    "onLanguage:c",
    "onLanguage:cpp",
    "workspaceContains:*.h",
    "workspaceContains:*.c",
    "workspaceContains:*.hh",
    "workspaceContains:*.cc",
    "workspaceContains:*.hxx",
    "workspaceContains:*.cxx",
    "workspaceContains:*.hpp",
    "workspaceContains:*.cpp"
  ],
  "main": "./dist/main",
  "contributes": {
    "taskDefinitions": [
      {
        "type": "C_Cpp_Runner"
      }
    ],
    "commands": [
      {
        "command": "C_Cpp_Runner.folder",
        "title": "Select Folder",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.mode",
        "title": "Select Mode",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.build",
        "title": "Build Folder",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.run",
        "title": "Run Folder",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.debug",
        "title": "Debug Folder",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.clean",
        "title": "Clean Folder",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.folderContextMenu",
        "title": "Select folder from context menu",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.resetLocalSettings",
        "title": "Reset local settings",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.toggleExtensionState",
        "title": "Activate/Deactivate the extension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.args",
        "title": "Commandline Arguments",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.buildSingleFile",
        "title": "Build Single File",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.runSingleFile",
        "title": "Run Single File",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      },
      {
        "command": "C_Cpp_Runner.debugSingleFile",
        "title": "Debug Single File",
        "when": "C_Cpp_Runner:activatedExtension",
        "category": "C/C++ Runner"
      }
    ],
    "keybindings": [
      {
        "command": "C_Cpp_Runner.toggleExtensionState",
        "key": "ctrl+alt+t",
        "mac": "ctrl+alt+t"
      },
      {
        "command": "C_Cpp_Runner.folder",
        "key": "ctrl+alt+f",
        "mac": "ctrl+alt+f",
        "when": "C_Cpp_Runner:activatedExtension"
      },
      {
        "command": "C_Cpp_Runner.mode",
        "key": "ctrl+alt+g",
        "mac": "ctrl+alt+g",
        "when": "C_Cpp_Runner:activatedExtension"
      },
      {
        "command": "C_Cpp_Runner.buildSingleFile",
        "key": "ctrl+alt+b",
        "mac": "ctrl+alt+b",
        "when": "C_Cpp_Runner:activatedExtension"
      },
      {
        "command": "C_Cpp_Runner.runSingleFile",
        "key": "ctrl+alt+r",
        "mac": "ctrl+alt+r",
        "when": "C_Cpp_Runner:activatedExtension"
      },
      {
        "command": "C_Cpp_Runner.debugSingleFile",
        "key": "ctrl+alt+d",
        "mac": "ctrl+alt+d",
        "when": "C_Cpp_Runner:activatedExtension"
      },
      {
        "command": "C_Cpp_Runner.args",
        "key": "ctrl+alt+a",
        "mac": "ctrl+alt+a",
        "when": "C_Cpp_Runner:activatedExtension"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "C_Cpp_Runner.folderContextMenu",
          "when": "explorerResourceIsFolder",
          "group": "cCppRunnerGroup@1"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "C/C++ Runner",
      "properties": {
        "C_Cpp_Runner.enableWarnings": {
          "type": "boolean",
          "default": true,
          "description": "Whether to enable checking warnings or not.",
          "scope": "resource"
        },
        "C_Cpp_Runner.warnings": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "-Wall",
            "-Wextra",
            "-Wpedantic"
          ],
          "description": "Warnings to check by the compiler.",
          "scope": "resource"
        },
        "C_Cpp_Runner.warningsAsError": {
          "type": "boolean",
          "default": false,
          "description": "Whether to treat warnings as compiler errors or not.",
          "scope": "resource"
        },
        "C_Cpp_Runner.cCompilerPath": {
          "type": "string",
          "default": "gcc",
          "description": "The path to the C Compiler (either gcc or clang).",
          "scope": "resource"
        },
        "C_Cpp_Runner.cppCompilerPath": {
          "type": "string",
          "default": "g++",
          "description": "The path to the C++ Compiler (either g++ or clang++).",
          "scope": "resource"
        },
        "C_Cpp_Runner.debuggerPath": {
          "type": "string",
          "default": "gdb",
          "description": "The path to the debugger (either gdb or lldb).",
          "scope": "resource"
        },
        "C_Cpp_Runner.msvcBatchPath": {
          "type": "string",
          "default": "",
          "description": "The path to the MSVC batch file (Needed to use the Visual Studio Compiler).",
          "scope": "resource"
        },
        "C_Cpp_Runner.useMsvc": {
          "type": "boolean",
          "default": false,
          "description": "Whether to use MSVC compiler or to use GCC/LLDB instead.",
          "scope": "resource"
        },
        "C_Cpp_Runner.cStandard": {
          "type": "string",
          "enum": [
            "",
            "c89",
            "c99",
            "c11",
            "c17",
            "gnu89",
            "gnu99",
            "gnu11",
            "gnu17"
          ],
          "default": "",
          "description": "C-Standard for the C Compiler. (If empty, compiler's default is used)",
          "scope": "resource"
        },
        "C_Cpp_Runner.cppStandard": {
          "type": "string",
          "enum": [
            "",
            "c++98",
            "c++03",
            "c++11",
            "c++14",
            "c++17",
            "c++20",
            "c++23",
            "gnu++98",
            "gnu++03",
            "gnu++11",
            "gnu++14",
            "gnu++17",
            "gnu++20",
            "gnu++23"
          ],
          "default": "",
          "description": "C++ Standard for the C++ Compiler. (If empty, compiler's default is used)",
          "scope": "resource"
        },
        "C_Cpp_Runner.compilerArgs": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Additional compiler arguments.",
          "scope": "resource"
        },
        "C_Cpp_Runner.linkerArgs": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Additional linker arguments.",
          "scope": "resource"
        },
        "C_Cpp_Runner.includePaths": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "Additional include paths.",
          "scope": "resource"
        },
        "C_Cpp_Runner.includeSearch": {
          "type": "array",
          "default": [
            "*",
            "**/*"
          ],
          "items": {
            "type": "string"
          },
          "description": "Include glob patterns for folder selection. (Ran before exlcude pattern)",
          "scope": "resource"
        },
        "C_Cpp_Runner.excludeSearch": {
          "type": "array",
          "default": [
            "**/build",
            "**/build/**",
            "**/.*",
            "**/.*/**",
            "**/.vscode",
            "**/.vscode/**"
          ],
          "items": {
            "type": "string"
          },
          "description": "Exclude glob patterns for folder selection. (Ran after include pattern)",
          "scope": "resource"
        }
      }
    }
  },
  "scripts": {
    "webpack": "webpack --mode development",
    "webpack-watch": "webpack --mode development --watch",
    "vscode:prepublish": "npm run webpack",
    "compile": "npm run webpack",
    "compile-watch": "npm run webpack-watch",
    "watch": "tsc -watch -p ./"
  },
  "devDependencies": {
    "@types/minimatch": "^3.0.5",
    "@types/node": "^14.0.27",
    "@types/vscode": "^1.53.0",
    "@typescript-eslint/eslint-plugin": "^4.1.1",
    "@typescript-eslint/eslint-plugin-tslint": "^4.20.0",
    "@typescript-eslint/parser": "^4.1.1",
    "eslint": "^7.9.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsdoc": "^32.3.0",
    "prettier": "^2.2.1",
    "typescript": "^4.0.2",
    "webpack": "^5.28.0",
    "webpack-cli": "^4.6.0"
  },
  "dependencies": {
    "json5": "^2.2.0",
    "lookpath": "^1.2.0",
    "minimatch": "^3.0.4",
    "ts-loader": "^8.1.0",
    "vsce": "^1.87.1"
  },
  "extensionDependencies": [
    "ms-vscode.cpptools",
    "vadimcn.vscode-lldb"
  ]
}
